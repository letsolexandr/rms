"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 3.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""


from .swagger_settings import SWAGGER_SETTINGS
from .ua_oauth_settings import UA_OAUTH_ACCESS_TOKEN_URL, UA_OAUTH_CLIENT_ID, UA_OAUTH_CLIENT_SECRET, \
    UA_OAUTH_USER_INFO_URL,UA_OAUTH_REDIRECT_URI,UA_OAUTH_DOMEN
from .celery_backend_options import *
from .database_settings_prom import DATABASES
from .cors_settings import *
from .email_settings import *
from .rest_settings import REST_FRAMEWORK, REST_REGISTRATION
from .jazzmin_settings import *
from .sign_settings import *
from django.utils.log import DEFAULT_LOGGING
import logging.config
from .common.djangocolors_formatter import DjangoColorsFormatter
import os
from pathlib import Path


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve(strict=True).parent.parent
USE_X_FORWARDED_HOST = True
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

SECRET_KEY = 'e81u7oywmGi9J5JJW1F2Rkv7pcZSG_9YxpZiQxmGNTU'

DEBUG = int(os.environ.get("DEBUG", default=1))


SITE_URL = os.environ.get('SITE_URL')
ALLOWED_HOSTS = ['*']

# Ознака відключеної авторизації за паролем
if DEBUG:
    DISABLE_LOGIN_AUTH = False
else:
    DISABLE_LOGIN_AUTH = True
    #SECURE_SSL_REDIRECT = True
    CSRF_COOKIE_SECURE=True
    SESSION_COOKIE_SECURE = True
    X_FRAME_OPTIONS = 'SAMEORIGIN'


CSRF_TRUSTED_ORIGINS = ['https://rms-register.online']

REDIS_HOST = os.environ.get('REDIS_HOST','localhost')
REDIS_PORT = os.environ.get('REDIS_PORT','6379')
# Application definition

INSTALLED_APPS = [
    'apps.mrs',
    'grappelli',
    'colorfield',
    'django_json_widget',
    'admin_ordering',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.postgres',
    'channels',
    'corsheaders',
    'rest_framework',
    'rest_framework.authtoken',
    'rest_auth',
    'rest_registration',
    'django_postgres_createdb',
    'drf_yasg',
    'apps.audit',
    'apps.core.apps.CoreConfig',
    'django_celery_results',
    'django_celery_beat',
    'cacheops',
    'cachalot',
    'apps.uaoauth',
    'django_extensions',
    "debug_toolbar"
]

INTERNAL_IPS = [
    # ...
    "127.0.0.1",
    "0.0.0.0",
    # "18.235.243.19"
]



MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'apps.core.middleware.CheckUploadFileSize',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'apps.audit.middleware.easyaudit.EasyAuditMiddleware',
]
if DEBUG:
    MIDDLEWARE.append("debug_toolbar.middleware.DebugToolbarMiddleware")
    DEBUG_TOOLBAR_PANELS = [    
    'debug_toolbar.panels.history.HistoryPanel',
    'debug_toolbar.panels.versions.VersionsPanel',
    'debug_toolbar.panels.timer.TimerPanel',
    'debug_toolbar.panels.settings.SettingsPanel',
    'debug_toolbar.panels.headers.HeadersPanel',
    'debug_toolbar.panels.request.RequestPanel',
    'debug_toolbar.panels.sql.SQLPanel',
    'debug_toolbar.panels.staticfiles.StaticFilesPanel',
    'debug_toolbar.panels.templates.TemplatesPanel',
    'debug_toolbar.panels.cache.CachePanel',
    'debug_toolbar.panels.signals.SignalsPanel',
    'debug_toolbar.panels.redirects.RedirectsPanel',
    'debug_toolbar.panels.profiling.ProfilingPanel',
    'cachalot.panels.CachalotPanel',]



ROOT_URLCONF = 'config.urls'

# Default X-Frame-Options header value

XS_SHARING_ALLOWED_METHODS = ['GET']

USE_X_FORWARDED_HOST = False
USE_X_FORWARDED_PORT = False



AUTH_USER_MODEL = 'core.CoreUser'
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'
ASGI_APPLICATION = 'config.asgi.application'

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [(REDIS_HOST, REDIS_PORT)],
        },
    },
}

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases


# DATABASE_ROUTERS = ['audit.router.DatabaseAppsRouter']
# DATABASE_APPS_MAPPING = {'audit': 'logs'}


REDIS_URL = f"redis://{REDIS_HOST}:{REDIS_PORT}"


CACHEOPS_REDIS = f"redis://{REDIS_URL}/2"



# CACHEOPS_CLIENT_CLASS = 'django_redis.cache.RedisCache'

CACHEOPS_DEFAULTS = {
    'timeout': 60*60
}
CACHEOPS = {
    # 'mrs.*': {'ops': {'fetch','get','count',}, 'timeout': 60*60},
    # Automatically cache any User.objects.get() calls for 15 minutes
    # This also includes .first() and .last() calls,
    # as well as request.user or post.author access,
    # where Post.author is a foreign key to auth.User
    # 'auth.user': {'ops': {'fetch', 'get'}, 'timeout': 60*60},
    # 'core.*': {'ops': {'fetch', 'get'}, 'timeout': 60*60},
    # 'mrs.militaryperson' :  {'ops': {'count',}, 'timeout': 60*60},

    # Automatically cache all gets and queryset fetches
    # to other django.contrib.auth models for an hour
    # 'auth.*': {'ops': {'fetch', 'get'}, 'timeout': 60*60},

    # Cache all queries to Permission
    # 'all' is an alias for {'get', 'fetch', 'count', 'aggregate', 'exists'}
    # 'client_settings.*': {'ops': {'fetch', 'get'}, 'timeout': 60*60},
    # 'auth.permission': {'ops': {'fetch', 'get'}, 'timeout': 60*60},
    # 'document.*': {'ops': {'fetch'}, 'timeout': 60*60},

    # Enable manual caching on all other models with default timeout of an hour
    # Use Post.objects.cache().get(...)
    #  or Tags.objects.filter(...).order_by(...).cache()
    # to cache particular ORM request.
    # Invalidation is still automatic
}
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": REDIS_URL + "/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    },
    "select2": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": REDIS_URL + "/2",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

# Tell select2 which cache configuration to use:
SELECT2_CACHE_BACKEND = "select2"
# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators


# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'uk'
LANGUAGES = (
    # ('en', _('English')),
    ('uk', 'Ukraine'),
)

TIME_ZONE = 'Europe/Kiev'

USE_I18N = True

USE_L10N = True

USE_TZ = True


MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

EMAIL_TIMEOUT = 30

MEDIA_URL = '/media/'  



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# 2.5MB - 2621440
# 5MB - 5242880
# 10MB - 10485760
# 20MB - 20971520
# 50MB - 5242880
# 100MB 104857600
# 250MB - 214958080
# 500MB - 429916160
FILE_UPLOAD_MAX_MEMORY_SIZE = 104857600  # 100MB
DATA_UPLOAD_MAX_MEMORY_SIZE = 104857600  # 100MB
# Видиляти файли при видаленні запису з БД
DELETE_FILE_ON_DELETING_LINK = False

ASYNC_TASKS = True  # Запускати задачі celery асинхронно. Необхідне для тестування
DATA_UPLOAD_MAX_NUMBER_FIELDS = 10240  # higher than the count of fields
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

GRAPPELLI_ADMIN_TITLE = "Система обліку військовозобовязаних (демонстраційна версія)"


from config.logger import LOGGING