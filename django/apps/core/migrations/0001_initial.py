# Generated by Django 3.1 on 2023-02-25 13:31

import apps.core.mixins
import apps.core.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CoreUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('auth_type', models.CharField(choices=[('ISEI', 'ІСЕІ'), ('PASSWORD', 'Пароль'), ('BOTH', 'Всі  доступні')], default='ISEI', max_length=50, verbose_name='Тип аутентифікації')),
                ('first_name', models.CharField(max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(max_length=150, verbose_name='last name')),
                ('email', models.EmailField(max_length=254, verbose_name='email address')),
                ('ipn', models.CharField(max_length=10, null=True, verbose_name='РНОКПП')),
                ('u_index', models.CharField(help_text='Застосовується при формуванні реєстраціного номера документа', max_length=2, null=True, verbose_name='Індекс користувача')),
                ('state', models.CharField(max_length=250, null=True, verbose_name='Посада')),
                ('short_name', models.CharField(max_length=150, null=True, verbose_name='Скорочене відображення')),
                ('department_short_name', models.CharField(max_length=250, null=True, verbose_name='Скорочене відображення (+ структурний підрозділ)')),
                ('display_name', models.CharField(max_length=250, null=True, verbose_name='Повне відображення')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Телефон')),
                ('photo', models.FileField(blank=True, null=True, upload_to=apps.core.models.get_upload_photo_path, verbose_name='Фото користувача')),
                ('av_color', models.CharField(default=apps.core.models.get_av_clor, max_length=16)),
                ('cached_permissions', models.JSONField(editable=False, help_text='\n    Містить кешовані значення дозволів користувача, оновлюється сигналом\n    ', null=True)),
            ],
            options={
                'verbose_name': 'Користувач',
                'verbose_name_plural': 'Користувачі',
                'ordering': ['last_name', 'first_name'],
            },
            bases=(apps.core.mixins.RelatedObjects, apps.core.mixins.CheckProtected, models.Model),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CoreOrganization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?')),
                ('unique_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен')),
                ('name', models.CharField(blank=True, db_index=True, max_length=256, null=True, verbose_name='Назва')),
                ('full_name', models.CharField(blank=True, db_index=True, max_length=256, null=True, verbose_name='Повна назва')),
                ('address', models.CharField(blank=True, db_index=True, max_length=200, null=True, verbose_name='Адреса')),
                ('edrpou', models.CharField(blank=True, db_index=True, default=apps.core.models.default_edrpou, max_length=50, null=True, verbose_name='ЄДРПОУ')),
                ('phone', models.CharField(blank=True, max_length=200, null=True, verbose_name='Телефон')),
                ('email', models.EmailField(blank=True, max_length=200, null=True, verbose_name='EMAIL')),
                ('main_unit', models.CharField(blank=True, max_length=200, null=True, verbose_name='Уповноважена особа')),
                ('main_unit_state', models.CharField(blank=True, max_length=200, null=True, verbose_name='Посада уповноваженої особи')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Примітка')),
                ('org_type', models.CharField(choices=[('PERSON', 'Фізична особа'), ('ORGANIZATION', 'Організація')], default='ORGANIZATION', max_length=20, verbose_name='Тип кореспондента')),
                ('j_index', models.SmallIntegerField(default=2, verbose_name='Індекс для використання в журналах реєстрації')),
                ('logo_img', models.FileField(blank=True, null=True, upload_to=apps.core.models.get_upload_org_photo_path, verbose_name='Логотип організації')),
                ('author', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='coreorganization_author', to=settings.AUTH_USER_MODEL, verbose_name='**Автор')),
                ('editor', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='coreorganization_editor', to=settings.AUTH_USER_MODEL, verbose_name='**Останній редактор')),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='core.coreorganization')),
            ],
            options={
                'verbose_name': 'Кореспондент',
                'verbose_name_plural': 'Кореспонденти',
                'permissions': [('add_simple_organization', 'Може створити локальну організацію'), ('change_simple_organization', 'Може змінити локальну організацію'), ('delete_simple_organization', 'Може видалити локальну організацію'), ('add_local_user', 'Може створити локального користувача'), ('change_local_user', 'Може змінити локального користувача'), ('delete_local_user', 'Може видалити локального користувача'), ('change_org_profile', 'Може змінювати профіль організації'), ('change_local_user_password', 'Може змінювати пароль  локального користувача')],
                'unique_together': {('organization', 'edrpou')},
            },
            bases=(apps.core.mixins.CheckProtected, apps.core.mixins.RelatedObjects, models.Model),
        ),
        migrations.CreateModel(
            name='Counter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_value', models.IntegerField(default=0)),
                ('model', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='GroupOrganization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?')),
                ('unique_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен')),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Назва')),
            ],
            options={
                'verbose_name': 'Група компаній (організацій)',
            },
            bases=(apps.core.mixins.CheckProtected, apps.core.mixins.RelatedObjects, models.Model),
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?')),
                ('unique_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен')),
                ('date_add', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='**Дата створення')),
                ('date_edit', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='**Дата останньої зміни')),
                ('author_display_name', models.TextField(editable=False, null=True, verbose_name='**Автор')),
                ('editor_display_name', models.TextField(editable=False, null=True, verbose_name='**Останій редактор(відображення)')),
                ('code', models.CharField(blank=True, max_length=10, null=True, verbose_name='Код')),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Назва')),
                ('department_type', models.IntegerField(blank=True, choices=[[1, 'Управління'], [2, 'Служба'], [3, 'Департамент'], [4, 'Відділ'], [5, 'Сектор']], null=True, verbose_name='Тип структурного підрозділу')),
                ('author', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='department_author', to=settings.AUTH_USER_MODEL, verbose_name='**Автор')),
                ('editor', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='department_editor', to=settings.AUTH_USER_MODEL, verbose_name='**Останій редактор')),
                ('organization', models.ForeignKey(editable=False, help_text='До якої організації відноситься інформація', null=True, on_delete=django.db.models.deletion.PROTECT, to='core.coreorganization', verbose_name='**Організація')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='childs', to='core.department', verbose_name='Кому підпорядкований')),
            ],
            options={
                'verbose_name': 'Структурний підрозділ',
                'verbose_name_plural': 'Структурні підрозділи',
            },
            bases=(apps.core.mixins.CheckProtected, apps.core.mixins.RelatedObjects, models.Model),
        ),
        migrations.CreateModel(
            name='AuthorisedPerson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?')),
                ('unique_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен')),
                ('date_add', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='**Дата створення')),
                ('date_edit', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='**Дата останньої зміни')),
                ('author_display_name', models.TextField(editable=False, null=True, verbose_name='**Автор')),
                ('editor_display_name', models.TextField(editable=False, null=True, verbose_name='**Останій редактор(відображення)')),
                ('full_name', models.CharField(max_length=255, verbose_name='ПІБ')),
                ('code', models.CharField(max_length=10, verbose_name='РНОКПП')),
                ('active', models.BooleanField(default=True, verbose_name='Активний')),
                ('author', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='authorisedperson_author', to=settings.AUTH_USER_MODEL, verbose_name='**Автор')),
                ('editor', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='authorisedperson_editor', to=settings.AUTH_USER_MODEL, verbose_name='**Останій редактор')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='authorized_persons', to='core.coreorganization', verbose_name='Організація')),
            ],
            options={
                'verbose_name': 'Уповнважена особа',
                'verbose_name_plural': 'Уповноважені особи',
            },
            bases=(apps.core.mixins.CheckProtected, apps.core.mixins.RelatedObjects, models.Model),
        ),
        migrations.AddField(
            model_name='coreuser',
            name='department',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='users', to='core.department'),
        ),
        migrations.AddField(
            model_name='coreuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='coreuser',
            name='organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='core.coreorganization', verbose_name='Організація'),
        ),
        migrations.AddField(
            model_name='coreuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
